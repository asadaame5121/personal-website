name: Publish Static JSON Only

on:
  schedule:
    - cron: '0 18 * * *'  # JST 3:00 (UTC 18:00)
  workflow_dispatch:

concurrency:
  group: external-json
  cancel-in-progress: true

jobs:
  publish-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout personal-website
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest Obsidianbackup commit hash
        id: obsidian_hash
        run: |
          git ls-remote https://github.com/asadaame5121/Obsidianbackup.git HEAD | awk '{print $1}' > obsidian_commit.txt
          echo "commit_hash=$(cat obsidian_commit.txt)" >> $GITHUB_OUTPUT

      - name: Restore last processed commit hash
        id: last_hash
        uses: actions/cache@v4
        with:
          path: obsidian_commit.txt
          key: obsidian-commit-${{ github.run_id }}
          restore-keys: |
            obsidian-commit-

      - name: Compare commit hashes and skip if unchanged
        run: |
          if [ -f obsidian_commit.txt ] && [ "$(cat obsidian_commit.txt)" = "${{ steps.obsidian_hash.outputs.commit_hash }}" ]; then
            echo "No new commit in Obsidianbackup. Skipping."
            exit 0
          fi

      - name: Clone latest Obsidianbackup (shallow)
        run: |
          git clone --depth=1 https://x-access-token:${{ secrets.PAT_FOR_COMMIT }}@github.com/asadaame5121/Obsidianbackup.git obsidian-latest

      - name: Setup Deno environment
        uses: denoland/setup-deno@v2

      - name: Sync required directories (run sync-obsidian.ts)
        run: |
          deno run --allow-read --allow-write --allow-run --allow-env scripts/sync-obsidian.ts
        env:
          OBSIDIAN_REPO_URL: https://x-access-token:${{ secrets.PAT_FOR_COMMIT }}@github.com/asadaame5121/Obsidianbackup.git
          TARGET_DIRS: Article,Book,Glossary,People
          DEST_ROOT: ./src
          ERROR_LOG: ./scripts/sync-obsidian-error.log

      - name: Generate JSON (dailylog, clippingshare)
        run: |
          deno run --allow-read --allow-write --allow-env scripts/update-dailylog.ts
          deno run --allow-read --allow-write --allow-env scripts/extract-clippingshare.ts
        env:
          OBSIDIAN_LOG_DIR: obsidian-latest/log
          CLIPPINGS_SOURCE_DIR: obsidian-latest/Clippings
          DAILYLOG_PATH: src/dailylog.md
          DAILYLOG_JSON: external_data/dailylog.json
          CLIPPINGS_OUTPUT_PATH: external_data/clippingshare.json
          

      - name: Check for JSON changes
        run: |
          git add external_data/*.json
          if git diff --cached --quiet; then
            echo "No JSON changes. Exiting."
            exit 0
          fi

      - name: Switch to external-json branch
        run: |
          git fetch origin external-json || git checkout --orphan external-json
          git checkout external-json || git checkout -b external-json

      - name: Set git user info
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Rebase external-json branch with remote
        run: |
          git pull --rebase origin external-json || echo "No remote changes or rebase failed"

      - name: Sync netlify.toml from main branch
        run: |
          git checkout main -- netlify.toml
          git add netlify.toml
          git commit -m "Sync netlify.toml from main" || echo "No changes to commit."

      - name: Commit and push JSON (external-json branch)
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add external_data/*.json
          git commit -m "日報の更新" || echo "No changes to commit."
          # リモートの最新履歴を取り込み、競合を防止
          git pull --rebase origin external-json || true
          # 安全付き強制プッシュ（他コミットがあれば拒否）
          git push --force-with-lease origin external-json

      - name: Save processed commit hash
        uses: actions/cache@v4
        with:
          path: obsidian_commit.txt
          key: obsidian-commit-${{ github.run_id }}
          restore-keys: |
            obsidian-commit-
